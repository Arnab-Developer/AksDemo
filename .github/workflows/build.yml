name: build

on:  
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

env:
  CONFIGURATION: Release

jobs:
  build:    
    name: Build
    runs-on: ubuntu-latest    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2      

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Publish api1
      run: dotnet publish 'AksDemo.Api1/AksDemo.Api1.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api1/bin/publish'

    - name: Docker build api1
      run: docker build -f 'AksDemo.Api1/Dockerfile' -t ghcr.io/arnab-developer/aksdemo.api1:1.0.2 .

    - name: Publish api2
      run: dotnet publish 'AksDemo.Api2/AksDemo.Api2.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api2/bin/publish'

    - name: Docker build api2
      run: docker build -f 'AksDemo.Api2/Dockerfile' -t ghcr.io/arnab-developer/aksdemo.api2:1.0.2 .

  github-package-deploy-api1:
    if: ${{ github.event_name == 'push' }}
    name: GitHub package deploy API 1
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2 
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Publish
      run: dotnet publish 'AksDemo.Api1/AksDemo.Api1.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api1/bin/publish'

    - name: Docker build
      run: docker build -f 'AksDemo.Api1/Dockerfile' -t ghcr.io/arnab-developer/aksdemo.api1:1.0.2 .
    
    - name: GitHub Container Registry login
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker push
      run: docker push ghcr.io/arnab-developer/aksdemo.api1:1.0.2

  github-package-deploy-api2:
    if: ${{ github.event_name == 'push' }}
    name: GitHub package deploy API 2
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2 
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Publish
      run: dotnet publish 'AksDemo.Api2/AksDemo.Api2.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api2/bin/publish'

    - name: Docker build
      run: docker build -f 'AksDemo.Api2/Dockerfile' -t ghcr.io/arnab-developer/aksdemo.api2:1.0.2 .
    
    - name: GitHub Container Registry login
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker push
      run: docker push ghcr.io/arnab-developer/aksdemo.api2:1.0.2

  dockerhub-deploy-api1:
    if: ${{ github.event_name == 'release' }}
    name: Dockerhub deploy API 1
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Dockerhub
      url: https://hub.docker.com/r/45862391/aksdemo.api1
    steps:
    - name: Checkout code
      uses: actions/checkout@v2   
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Publish
      run: dotnet publish 'AksDemo.Api1/AksDemo.Api1.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api1/bin/publish'

    - name: Docker build
      run: docker build -f 'AksDemo.Api1/Dockerfile' -t 45862391/aksdemo.api1:1.0.2 .

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ 45862391 }}
        password: ${{ secrets.DOCKERHUB_PWD }}

    - name: Docker push
      run: docker push 45862391/aksdemo.api1:1.0.2

  dockerhub-deploy-api2:
    if: ${{ github.event_name == 'release' }}
    name: Dockerhub deploy API 2
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Dockerhub
      url: https://hub.docker.com/r/45862391/aksdemo.api2
    steps:
    - name: Checkout code
      uses: actions/checkout@v2   
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Publish
      run: dotnet publish 'AksDemo.Api2/AksDemo.Api2.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api2/bin/publish'

    - name: Docker build
      run: docker build -f 'AksDemo.Api2/Dockerfile' -t 45862391/aksdemo.api2:1.0.2 .

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ 45862391 }}
        password: ${{ secrets.DOCKERHUB_PWD }}

    - name: Docker push
      run: docker push 45862391/aksdemo.api2:1.0.2