name: build

on:  
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CONFIGURATION: Release

jobs:
  build:    
    name: Build
    runs-on: ubuntu-latest    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2      

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.300

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test --configuration ${{ env.CONFIGURATION }} --no-restore

  github-package-deploy-api1:
    #if: ${{ github.event_name == 'push' }}
    name: GitHub package deploy API 1
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2 
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.300

    - name: Publish
      run: dotnet publish 'AksDemo.Api1/AksDemo.Api1.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api1/bin/publish'

    - name: Docker build
      run: docker build -f 'AksDemo.Api1/Dockerfile' -t ghcr.io/arnab-developer/aksdemo.api1:1.0.0 .
    
    - name: Docker push
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u Arnab-Developer --password-stdin
        docker push ghcr.io/arnab-developer/aksdemo.api1:1.0.0
        docker logout

  github-package-deploy-api2:
    #if: ${{ github.event_name == 'push' }}
    name: GitHub package deploy API 2
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2 
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.300

    - name: Publish
      run: dotnet publish 'AksDemo.Api2/AksDemo.Api2.csproj' --configuration ${{ env.CONFIGURATION }} -o 'AksDemo.Api2/bin/publish'

    - name: Docker build
      run: docker build -f 'AksDemo.Api2/Dockerfile' -t ghcr.io/arnab-developer/aksdemo.api2:1.0.0 .
    
    - name: Docker push
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u Arnab-Developer --password-stdin
        docker push ghcr.io/arnab-developer/aksdemo.api2:1.0.0
        docker logout

  dockerhub-deploy:
    if: ${{ github.event_name == 'release' }}
    name: Dockerhub deploy
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Dockerhub
      url: https://hub.docker.com/r/45862391/httphealthcheckdashboard
    steps:
    - name: Checkout code
      uses: actions/checkout@v2   
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1

      with:
        dotnet-version: 5.0.300

    - name: Publish
      run: dotnet publish 'HttpHealthCheckDashboard/HttpHealthCheckDashboard.csproj' --configuration ${{ env.CONFIGURATION }} -o 'HttpHealthCheckDashboard/bin/publish'

    - name: Docker build
      run: docker build -f 'HttpHealthCheckDashboard/Dockerfile' -t 45862391/httphealthcheckdashboard:2.0.3 .

    - name: Docker push
      run: |
        echo "${{ secrets.DOCKERHUB_PWD }}" | docker login -u 45862391 --password-stdin
        docker push 45862391/httphealthcheckdashboard:2.0.3
        docker logout